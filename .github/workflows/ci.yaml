name: CI
on:
  push:
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    strategy:
      matrix:
        include:
          - name: pgparquet-linux-aarch64
            os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
          - name: pgparquet-linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: pgparquet-macos-aarch64
            os: macos-latest
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
      - name: Lint
        run: |
          cargo clippy
          cargo fmt --check
      - name: Test
        run: cargo test
      - name: Build binary
        run: cargo build --release
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: target/${{ matrix.target }}/release/pgparquet
  create-release:
    needs: build
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            pgparquet-*/pgparquet*
          generate_release_notes: true
      - name: Authenticate with crates.io
        uses: rust-lang/crates-io-auth-action@v1
        id: auth
      - name: Publish to crates.io
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
